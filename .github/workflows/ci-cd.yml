name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:  
      - uses: actions/checkout@v4

      - name: Create .env files
        run: |
          for service in auth product; do
            echo "MONGODB_URI=${{ secrets['MONGODB_'${service^^}'_URI'] }}" > $service/.env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $service/.env
            echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> $service/.env
            echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> $service/.env
          done

      - name: Install dependencies
        run: |
          cd auth && npm ci
          cd ../product && npm ci

      - name: Wait for MongoDB
        run: |
          until nc -z localhost 27017; do
            echo "Waiting for MongoDB..."
            sleep 2
          done

      - name: Run auth tests
        run: |
          cd auth && npm test

      - name: Start Auth service and wait
        run: |
          cd auth && npm start &
          timeout=0
          until nc -z localhost 3000; do
            sleep 2
            timeout=$((timeout+2))
            if [ $timeout -ge 20 ]; then
              echo "Auth service not ready after 20s"
              exit 1
            fi
          done

      - name: Run product tests
        run: |
          cd product && npm test

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker images
        run: |
          for service in api-gateway auth order product; do
            docker build --pull -t trinhvanvu/$service:latest -t trinhvanvu/$service:${{ github.sha }} ./$service
            docker push trinhvanvu/$service:latest
            docker push trinhvanvu/$service:${{ github.sha }}
          done

  deploy:
    name: Deploy on Localhost (Docker Desktop)
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: Deploy with Docker Compose
        run: |
          cd "D:\DAIHOC\NAM4\TAILIEU\LTHDV\THUCHANH\22685821-TrinhVanVu-EProject1\22685821-TrinhVanVu-EProject-main"
          docker-compose down --remove-orphans
          docker-compose pull
          docker-compose up -d
          docker ps
